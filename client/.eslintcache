[{"/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/index.js":"1","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/App.js":"2","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/store.js":"3","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/utils/setAuthToken.js":"4","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/actions/auth.js":"5","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/layout/Alert.js":"6","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/layout/Navbar.js":"7","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/layout/Landing.js":"8","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/auth/Register.js":"9","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/auth/Login.js":"10","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/dashboard/Dashboard.js":"11","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/routing/PrivateRoute.js":"12","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/profile-forms/CreateProfile.js":"13","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/profile-forms/AddExperience.js":"14","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/profile-forms/AddEducation.js":"15","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/profile-forms/EditProfile.js":"16","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/profiles/Profiles.js":"17","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/profile/Profile.js":"18","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/actions/alert.js":"19","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/dashboard/Experience.js":"20","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/actions/profile.js":"21","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/layout/Spinner.js":"22","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/dashboard/DashboardActions.js":"23","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/profile/ProfileGithub.js":"24","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/profile/ProfileEducation.js":"25","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/profile/ProfileExperience.js":"26","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/profile/ProfileAbout.js":"27","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/profile/ProfileTop.js":"28","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/profiles/ProfileItem.js":"29","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/dashboard/Education.js":"30","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/reducers/index.js":"31","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/reducers/auth.js":"32","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/reducers/alert.js":"33","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/reducers/profile.js":"34"},{"size":146,"mtime":1608466708820,"results":"35","hashOfConfig":"36"},{"size":2266,"mtime":1608648096421,"results":"37","hashOfConfig":"36"},{"size":369,"mtime":1608475454356,"results":"38","hashOfConfig":"36"},{"size":236,"mtime":1608526156568,"results":"39","hashOfConfig":"36"},{"size":1937,"mtime":1608574706244,"results":"40","hashOfConfig":"36"},{"size":602,"mtime":1608480345098,"results":"41","hashOfConfig":"36"},{"size":1367,"mtime":1608640944086,"results":"42","hashOfConfig":"36"},{"size":1045,"mtime":1608574035539,"results":"43","hashOfConfig":"36"},{"size":2377,"mtime":1608562773272,"results":"44","hashOfConfig":"36"},{"size":1757,"mtime":1609604093393,"results":"45","hashOfConfig":"36"},{"size":1886,"mtime":1608639733983,"results":"46","hashOfConfig":"36"},{"size":582,"mtime":1608564777576,"results":"47","hashOfConfig":"36"},{"size":5857,"mtime":1608616272612,"results":"48","hashOfConfig":"36"},{"size":2933,"mtime":1608638019392,"results":"49","hashOfConfig":"36"},{"size":2926,"mtime":1608638049166,"results":"50","hashOfConfig":"36"},{"size":6992,"mtime":1608616210224,"results":"51","hashOfConfig":"36"},{"size":1165,"mtime":1608645300033,"results":"52","hashOfConfig":"36"},{"size":2650,"mtime":1609677887377,"results":"53","hashOfConfig":"36"},{"size":283,"mtime":1608519884334,"results":"54","hashOfConfig":"36"},{"size":1283,"mtime":1608639441605,"results":"55","hashOfConfig":"36"},{"size":5447,"mtime":1608646539588,"results":"56","hashOfConfig":"36"},{"size":291,"mtime":1608574180466,"results":"57","hashOfConfig":"36"},{"size":654,"mtime":1608603714668,"results":"58","hashOfConfig":"36"},{"size":698,"mtime":1609825809185,"results":"59","hashOfConfig":"36"},{"size":744,"mtime":1609673322793,"results":"60","hashOfConfig":"36"},{"size":669,"mtime":1609672348123,"results":"61","hashOfConfig":"36"},{"size":784,"mtime":1609671802633,"results":"62","hashOfConfig":"36"},{"size":1567,"mtime":1609654004092,"results":"63","hashOfConfig":"36"},{"size":929,"mtime":1610374606776,"results":"64","hashOfConfig":"36"},{"size":1320,"mtime":1608639411337,"results":"65","hashOfConfig":"36"},{"size":214,"mtime":1608572659116,"results":"66","hashOfConfig":"36"},{"size":909,"mtime":1608639078931,"results":"67","hashOfConfig":"36"},{"size":343,"mtime":1608477416978,"results":"68","hashOfConfig":"36"},{"size":887,"mtime":1608640409339,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"mek0de",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"72"},"/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/index.js",[],["149","150"],"/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/App.js",[],"/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/store.js",[],"/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/utils/setAuthToken.js",[],"/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/actions/auth.js",[],"/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/layout/Alert.js",[],"/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/layout/Navbar.js",[],"/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/layout/Landing.js",[],"/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/auth/Register.js",[],"/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/auth/Login.js",[],"/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/dashboard/Dashboard.js",["151"],"import React, {useEffect, Fragment} from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Spinner from '../layout/Spinner'\nimport {Link} from 'react-router-dom'\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile'\nimport DashboardActions from './DashboardActions'\nimport Experience from './Experience'\nimport Education from './Education'\n\nconst Dashboard = ({getCurrentProfile, auth: {user}, profile : {profile, loading}, deleteAccount}) => {\n\n  useEffect(() => {\n    getCurrentProfile()\n  }, [])\n\n  return loading && profile === null\n    ? <Spinner />\n    : <Fragment>\n        <h1 className=\"large text-primary\">Dashboard</h1>\n        <p className=\"lead\">\n        <i className=\"fas fa-user\"> Welcome {user && user.name}</i>\n      </p>\n      {profile !== null\n        ?\n        <Fragment>\n          <DashboardActions />\n          <Experience experience={profile.experience} />\n          <Education education={profile.education} />\n\n          <div className=\"my-2\">\n            <button className=\"btn btn-danger\" onClick={()=> deleteAccount()}>\n              <i className=\"fas fa-user-minus\"></i> Delete My Account\n            </button>\n          </div>\n        </Fragment>\n        :\n        <Fragment>\n          <p>You have not yet setup a profile, please add some info</p>\n          <Link to='/create-profile' className = 'btn btn-primary my-1'> Create Profile </Link>\n        </Fragment>}\n      </Fragment>\n}\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile,\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired\n})\n\nexport default connect(mapStateToProps, {getCurrentProfile, deleteAccount})(Dashboard)\n","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/routing/PrivateRoute.js",[],"/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/profile-forms/CreateProfile.js",["152"],"import React, { useState, Fragment } from 'react'\nimport {Link, withRouter} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport {createProfile} from '../../actions/profile'\n\nconst CreateProfile = ({createProfile, history}) => {\n\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: ''\n  });\n\n  const [displaySocialInputs, toggleSocialInput] = useState(false)\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram\n  } = formData;\n\n  const onChange = event => setFormData({...formData, [event.target.name]: event.target.value})\n\n  const onSubmit = event => {\n    event.preventDefault()\n    createProfile(formData, history, false)\n  }\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">\n        Create Your Profile\n      </h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={onChange}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\"\n            >Give us an idea of where you are at in your career</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={onChange} />\n          <small className=\"form-text\"\n            >Could be your own company or one you work for</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={onChange}/>\n          <small className=\"form-text\"\n            >Could be your own or a company website</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={onChange}/>\n          <small className=\"form-text\"\n            >City & state suggested (eg. Boston, MA)</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={onChange} />\n          <small className=\"form-text\"\n            >Please use comma separated values (eg.\n            HTML,CSS,JavaScript,PHP)</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername} onChange={onChange}\n          />\n          <small className=\"form-text\"\n            >If you want your latest repos and a Github link, include your\n            username</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={onChange}></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button type=\"button\" className=\"btn btn-light\" onClick={()=>toggleSocialInput(!displaySocialInputs)}>\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && \n          <Fragment>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={onChange}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={onChange}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={onChange}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={onChange}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={onChange}/>\n            </div>\n            \n          </Fragment>}\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <a className=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\n      </form>\n    </Fragment>\n  )\n}\n\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps, {createProfile})(withRouter(CreateProfile))\n","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/profile-forms/AddExperience.js",[],"/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/profile-forms/AddEducation.js",[],"/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/profile-forms/EditProfile.js",["153","154"],"import React, { useState, Fragment, useEffect } from 'react'\nimport {Link, withRouter} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport {createProfile, getCurrentProfile} from '../../actions/profile'\n\nconst EditProfile = ({profile: {profile, loading}, createProfile, getCurrentProfile, history}) => {\n\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: ''\n  });\n\n  const [displaySocialInputs, toggleSocialInput] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile();\n\n    setFormData({\n      company: loading || !profile.company ? \"\" : profile.company, \n      website: loading || !profile.website ? \"\" : profile.website, \n      location: loading || !profile.location ? \"\" : profile.location, \n      status: loading || !profile.status ? \"\" : profile.status, \n      skills: loading || !profile.skills ? \"\" : profile.skills.join(','), \n      githubusername: loading || !profile.githubusername ? \"\" : profile.githubusername, \n      bio: loading || !profile.bio ? \"\" : profile.bio, \n      twitter: loading || !profile.twitter ? \"\" : profile.twitter, \n      facebook: loading || !profile.facebook ? \"\" : profile.facebook, \n      linkedin: loading || !profile.linkedin ? \"\" : profile.linkedin, \n      youtube: loading || !profile.youtube ? \"\" : profile.youtube, \n      instagram: loading || !profile.instagram ? \"\" : profile.instagram \n    })\n  },[loading])\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram\n  } = formData;\n\n  const onChange = event => setFormData({...formData, [event.target.name]: event.target.value})\n\n  const onSubmit = event => {\n    event.preventDefault()\n    createProfile(formData, history, true)\n  }\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">\n        Create Your Profile\n      </h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={onChange}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\"\n            >Give us an idea of where you are at in your career</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={onChange} />\n          <small className=\"form-text\"\n            >Could be your own company or one you work for</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={onChange}/>\n          <small className=\"form-text\"\n            >Could be your own or a company website</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={onChange}/>\n          <small className=\"form-text\"\n            >City & state suggested (eg. Boston, MA)</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={onChange} />\n          <small className=\"form-text\"\n            >Please use comma separated values (eg.\n            HTML,CSS,JavaScript,PHP)</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername} onChange={onChange}\n          />\n          <small className=\"form-text\"\n            >If you want your latest repos and a Github link, include your\n            username</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={onChange}></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button type=\"button\" className=\"btn btn-light\" onClick={()=>toggleSocialInput(!displaySocialInputs)}>\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && \n          <Fragment>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value='twitter' onChange={onChange}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={onChange}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={onChange}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={onChange}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={onChange}/>\n            </div>\n            \n          </Fragment>}\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" href=\"/dashboard\">Go Back</Link>\n      </form>\n    </Fragment>\n  )\n}\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n})\n\nexport default connect(mapStateToProps, {createProfile, getCurrentProfile})(withRouter(EditProfile))\n","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/profiles/Profiles.js",["155"],"import React, {Fragment, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Spinner from '../layout/Spinner'\nimport { getProfiles } from '../../actions/profile'\nimport ProfileItem from './ProfileItem'\n\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n  \n  useEffect(() => {\n    getProfiles()\n  }, [])\n  \n  return (\n    <Fragment>\n      {loading ? (<Spinner />) : (<Fragment>\n        <h1 className=\"large text-primary\">Developers</h1>\n        <p className=\"lead\">\n          <i className=\"fab fa-connectdevelop\"></i>{' '}Browse and connect with developers\n        </p>\n        <div className=\"profiles\">\n          {profiles.length > 0 ? (\n            profiles.map(prof => (\n              <ProfileItem key={prof._id} profile={prof} />\n            ))\n          ) : ( <h4>No profiles found</h4> )}\n        </div>\n      </Fragment>)}\n    </Fragment>\n  )\n}\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n})\n\nexport default connect(mapStateToProps, {getProfiles})(Profiles)\n","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/profile/Profile.js",["156"],"import React, {Fragment, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Spinner from '../layout/Spinner'\nimport { getProfileById } from '../../actions/profile'\nimport ProfileTop from './ProfileTop'\nimport ProfileAbout from './ProfileAbout'\nimport ProfileExperience from './ProfileExperience'\nimport ProfileEducation from './ProfileEducation'\nimport ProfileGithub from './ProfileGithub'\n\nconst Profile = ({ getProfileById, match, auth, profile: { profile, loading } }) => {\n\n  useEffect(() => {\n    getProfileById(match.params.id) //this will match the ID in the URL\n  }, [getProfileById, match.params.id])\n\n  return (\n    <Fragment>\n      {profile === null || loading\n        ? <Spinner />\n        : <Fragment>\n\n          <Link to='/profiles' className=\"btn btn-light\">Back To Profiles </Link>\n\n          {auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id\n            && (\n            <Link to='/edit-profile' className='btn btn-dark'>Edit Profile</Link>\n          )}\n          \n          <div class=\"profile-grid my-1\">\n\n            <ProfileTop profile={profile} />\n\n            <ProfileAbout profile={profile} />\n\n            <div className=\"profile-exp bg-white p-2\">\n              <h2 className=\"text-primary\">Experience</h2>\n              {profile.experience.length > 0\n                ? (<Fragment>\n                  {profile.experience.map(experience => (\n                    <ProfileExperience key={experience._id} experience={experience} />\n                  ))}\n                </Fragment> )\n                : (<h4>No Experience Credentials</h4>)}\n            </div>\n\n            <div className=\"profile-edu bg-white p-2\">\n              <h2 className=\"text-primary\">Education</h2>\n              {profile.education.length > 0\n                ? (<Fragment>\n                  {profile.education.map(education => (\n                    <ProfileEducation key={education._id} education={education} />\n                  ))}\n                </Fragment> )\n                : (<h4>No Education Credentials</h4>)}\n            </div>\n\n            {/* {profile.githubusername && (\n              <ProfileGithub username={profile.githubusername}/>\n            )} */}\n\n          </div>\n        </Fragment>}\n    </Fragment>\n  )\n}\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps, {getProfileById})(Profile)\n","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/actions/alert.js",[],"/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/dashboard/Experience.js",[],"/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/actions/profile.js",["157"],"import axios from 'axios';\nimport { setAlert } from './alert'\n\n//Get current profile\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me'); //it got the token already, it knows what to load\n    dispatch({\n      type: 'GET_PROFILE',\n      payload: res.data\n    })\n  } catch (error) {\n    dispatch({\n      type: 'PROFILE_ERROR',\n      payload: {msg: error.response.statusText, status: error.response.status}\n    })\n  }\n}\n\n//Get all profile\nexport const getProfiles = () => async dispatch => {\n  dispatch({type: 'CLEAR_PROFILE'})\n  try {\n    const res = await axios.get('/api/profile'); \n    dispatch({\n      type: 'GET_PROFILES',\n      payload: res.data\n    })\n  } catch (error) {\n    dispatch({\n      type: 'PROFILE_ERROR',\n      payload: {msg: error.response.statusText, status: error.response.status}\n    })\n  }\n}\n\n//Get profile by ID\nexport const getProfileById = (userId) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`); \n    dispatch({\n      type: 'GET_PROFILE',\n      payload: res.data\n    })\n  } catch (error) {\n    dispatch({\n      type: 'PROFILE_ERROR',\n      payload: {msg: error.response.statusText, status: error.response.status}\n    })\n  }\n}\n\n\n//Get Github Repos\nexport const getGithubRepos = (username) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`); \n    dispatch({\n      type: 'GET_REPOS',\n      payload: res.data\n    })\n  } catch (error) {\n    dispatch({\n      type: 'PROFILE_ERROR',\n      payload: {msg: error.response.statusText, status: error.response.status}\n    })\n  }\n}\n\n//Create or Update a profile\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\":\"application/json\"\n      }\n    }\n    const res = await axios.post('/api/profile', formData, config)\n\n    dispatch({\n      type: 'GET_PROFILE',\n      payload: res.data\n    })\n\n    dispatch(setAlert(edit ? 'Profile Updated' : \"Profile created\", \"success\"))\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n\n  } catch (error) {\n\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n    }\n\n    dispatch({\n      type: 'PROFILE_ERROR',\n      payload: {msg: error.response.statusText, status: error.response.status}\n    })\n  }\n}\n\n\n//Add experience\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\":\"application/json\"\n      }\n    }\n    const res = await axios.put('/api/profile/experience', formData, config)\n    dispatch({\n      type: 'UPDATE_PROFILE',\n      payload: res.data\n    })\n    dispatch(setAlert(\"Experience Added\", \"success\"))\n    history.push('/dashboard');\n  } catch (error) {\n\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n    }\n    dispatch({\n      type: 'PROFILE_ERROR',\n      payload: {msg: error.response.statusText, status: error.response.status}\n    })\n  }\n}\n\n\n//Add Education\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\":\"application/json\"\n      }\n    }\n    const res = await axios.put('/api/profile/education', formData, config)\n\n    dispatch({\n      type: 'UPDATE_PROFILE',\n      payload: res.data\n    })\n    dispatch(setAlert(\"Education Added\", \"success\"))\n\n    history.push('/dashboard');\n  \n\n  } catch (error) {\n\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n    }\n    dispatch({\n      type: 'PROFILE_ERROR',\n      payload: {msg: error.response.statusText, status: error.response.status}\n    })\n  }\n}\n\n\n// Delete experience\n// DELETE api/profile/experience/:exp_id\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/$${id}`);\n    \n    dispatch({\n      type: 'UPDATE_PROFILE',\n      payload: res.data\n    })\n\n    dispatch(setAlert(\"Experience Removed\", \"success\"))\n\n  } catch (error) {\n\n    dispatch({\n      type: 'PROFILE_ERROR',\n      payload: {msg: error.response.statusText, status: error.response.status}\n    })\n\n  }\n}\n\n\n// Delete experience\n// DELETE api/profile/education/:exp_id\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/$${id}`);\n    \n    dispatch({\n      type: 'UPDATE_PROFILE',\n      payload: res.data\n    })\n\n    dispatch(setAlert(\"Education Removed\", \"success\"))\n\n  } catch (error) {\n\n    dispatch({\n      type: 'PROFILE_ERROR',\n      payload: {msg: error.response.statusText, status: error.response.status}\n    })\n  }\n}\n\n\n// Delete Account and profile\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure? This can NOT be undone.')) {\n    try {\n    const res = await axios.delete(`/api/profile`);\n    \n    dispatch({type: 'CLEAR_PROFILE'})\n    dispatch({type: 'ACCOUNT_DELETED'})\n    dispatch(setAlert(\"Your account has been permanently deleted\", \"danger\"))\n\n  } catch (error) {\n\n    dispatch({\n      type: 'PROFILE_ERROR',\n      payload: {msg: error.response.statusText, status: error.response.status}\n    })\n  }\n  }\n  \n}","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/layout/Spinner.js",[],"/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/dashboard/DashboardActions.js",[],"/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/profile/ProfileGithub.js",["158","159","160"],"import React, {useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Spinner from '../layout/Spinner'\nimport {getGithubRepos} from '../../actions/profile'\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n  \n  useEffect(() => {\n    getGithubRepos(username)\n  }, [getGithubRepos(username)])\n\n  return (\n    <div>\n      \n    </div>\n  )\n}\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n})\n\nexport default connect(mapStateToProps, {getGithubRepos})(ProfileGithub)\n","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/profile/ProfileEducation.js",[],"/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/profile/ProfileExperience.js",[],"/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/profile/ProfileAbout.js",[],"/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/profile/ProfileTop.js",[],"/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/profiles/ProfileItem.js",[],"/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/components/dashboard/Education.js",[],"/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/reducers/index.js",[],"/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/reducers/auth.js",["161"],"const initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null\n}\n\nexport default function (state = initialState, action) {\n  const { payload, type } = action\n  switch (type) {\n    case 'REGISTER_SUCCESS':\n    case 'LOGIN_SUCCESS':\n      localStorage.setItem('token', payload.token)\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case 'REGISTER_FAIL':\n    case 'AUTH_ERROR':\n    case 'LOGIN_FAIL':\n    case 'LOGOUT':\n    case 'ACCOUNT_DELETED':\n      localStorage.removeItem('token')\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n    case 'USER_LOADED':\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      };\n    default:\n      return state\n  }\n}","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/reducers/alert.js",["162"],"const initialState = []\n\nexport default function (state = initialState, action) {\n\n  const { type, payload } = action\n  \n  switch (type) {\n    case 'SET_ALERT':\n      return [...state, payload];\n    case 'REMOVE_ALERT':\n      return state.filter(alert => alert.id !== payload) //payload is id in this case\n    default:\n      return state\n  }\n}","/Users/dominic/Desktop/Coding/Project - Final Deployment/MERN to Heroku/Social Media/client/src/reducers/profile.js",["163"],"const initialState = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {}\n}\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case 'GET_PROFILE':\n    case 'UPDATE_PROFILE':\n      return {\n        ...state,\n        profile: payload,\n        loading: false\n      };\n    case 'GET_PROFILES':\n      return {\n        ...state,\n        profiles: payload,\n        loading: false\n      }\n    case 'PROFILE_ERROR':\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      }\n    case 'CLEAR_PROFILE':\n      return {\n        ...state,\n        profile: null,\n        repos: [],\n        loading: false\n      };\n    case 'GET_REPOS':\n      return {\n        ...state,\n        repos: payload, \n        loading: false\n      }\n    default:\n      return {\n        ...state\n      }\n  }\n}",{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":15,"column":6,"nodeType":"170","endLine":15,"endColumn":8,"suggestions":"171"},{"ruleId":"172","severity":1,"message":"173","line":2,"column":9,"nodeType":"174","messageId":"175","endLine":2,"endColumn":13},{"ruleId":"168","severity":1,"message":"176","line":44,"column":5,"nodeType":"170","endLine":44,"endColumn":14,"suggestions":"177"},{"ruleId":"172","severity":1,"message":"178","line":54,"column":5,"nodeType":"174","messageId":"175","endLine":54,"endColumn":12},{"ruleId":"168","severity":1,"message":"179","line":13,"column":6,"nodeType":"170","endLine":13,"endColumn":8,"suggestions":"180"},{"ruleId":"172","severity":1,"message":"181","line":11,"column":8,"nodeType":"174","messageId":"175","endLine":11,"endColumn":21},{"ruleId":"172","severity":1,"message":"182","line":222,"column":11,"nodeType":"174","messageId":"175","endLine":222,"endColumn":14},{"ruleId":"172","severity":1,"message":"183","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":15},{"ruleId":"168","severity":1,"message":"184","line":11,"column":6,"nodeType":"170","endLine":11,"endColumn":32,"suggestions":"185"},{"ruleId":"168","severity":1,"message":"186","line":11,"column":7,"nodeType":"187","endLine":11,"endColumn":31},{"ruleId":"188","severity":1,"message":"189","line":8,"column":1,"nodeType":"190","endLine":42,"endColumn":2},{"ruleId":"188","severity":1,"message":"189","line":3,"column":1,"nodeType":"190","endLine":15,"endColumn":2},{"ruleId":"188","severity":1,"message":"189","line":9,"column":1,"nodeType":"190","endLine":50,"endColumn":2},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["193"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.facebook', 'profile.githubusername', 'profile.instagram', 'profile.linkedin', 'profile.location', 'profile.skills', 'profile.status', 'profile.twitter', 'profile.website', and 'profile.youtube'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["194"],"'twitter' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProfiles'. Either include it or remove the dependency array. If 'getProfiles' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["195"],"'ProfileGithub' is defined but never used.","'res' is assigned a value but never used.","'Spinner' is defined but never used.","React Hook useEffect has missing dependencies: 'getGithubRepos' and 'username'. Either include them or remove the dependency array. If 'getGithubRepos' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["196"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"205","text":"206"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.facebook, profile.githubusername, profile.instagram, profile.linkedin, profile.location, profile.skills, profile.status, profile.twitter, profile.website, profile.youtube]",{"range":"207","text":"208"},"Update the dependencies array to be: [getProfiles]",{"range":"209","text":"210"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"211","text":"212"},[552,554],"[getCurrentProfile]",[1606,1615],"[getCurrentProfile, loading, profile.bio, profile.company, profile.facebook, profile.githubusername, profile.instagram, profile.linkedin, profile.location, profile.skills, profile.status, profile.twitter, profile.website, profile.youtube]",[374,376],"[getProfiles]",[328,354],"[getGithubRepos, username]"]