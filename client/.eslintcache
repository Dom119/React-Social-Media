[{"/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/index.js":"1","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/App.js":"2","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/layout/Navbar.js":"3","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/layout/Landing.js":"4","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/auth/Login.js":"5","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/auth/Register.js":"6","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/store.js":"7","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/reducers/index.js":"8","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/reducers/alert.js":"9","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/actions/alert.js":"10","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/layout/Alert.js":"11","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/reducers/auth.js":"12","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/actions/auth.js":"13","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/utils/setAuthToken.js":"14","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/dashboard/Dashboard.js":"15","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/routing/PrivateRoute.js":"16","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/reducers/profile.js":"17","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/actions/profile.js":"18","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/layout/Spinner.js":"19","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/profile-forms/CreateProfile.js":"20","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/dashboard/DashboardActions.js":"21","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/profile-forms/EditProfile.js":"22","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/profile-forms/AddExperience.js":"23","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/profile-forms/AddEducation.js":"24","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/dashboard/Education.js":"25","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/dashboard/Experience.js":"26","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/profiles/Profiles.js":"27","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/profiles/ProfileItem.js":"28","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/profile/Profile.js":"29","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/profile/ProfileTop.js":"30","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/profile/ProfileAbout.js":"31","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/profile/ProfileExperience.js":"32","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/profile/ProfileEducation.js":"33","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/profile/ProfileGithub.js":"34"},{"size":146,"mtime":1608466708820,"results":"35","hashOfConfig":"36"},{"size":2266,"mtime":1608648096421,"results":"37","hashOfConfig":"36"},{"size":1367,"mtime":1608640944086,"results":"38","hashOfConfig":"36"},{"size":1045,"mtime":1608574035539,"results":"39","hashOfConfig":"36"},{"size":1757,"mtime":1609604093393,"results":"40","hashOfConfig":"36"},{"size":2377,"mtime":1608562773272,"results":"41","hashOfConfig":"36"},{"size":369,"mtime":1608475454356,"results":"42","hashOfConfig":"36"},{"size":214,"mtime":1608572659116,"results":"43","hashOfConfig":"36"},{"size":343,"mtime":1608477416978,"results":"44","hashOfConfig":"36"},{"size":283,"mtime":1608519884334,"results":"45","hashOfConfig":"36"},{"size":602,"mtime":1608480345098,"results":"46","hashOfConfig":"36"},{"size":909,"mtime":1608639078931,"results":"47","hashOfConfig":"36"},{"size":1937,"mtime":1608574706244,"results":"48","hashOfConfig":"36"},{"size":236,"mtime":1608526156568,"results":"49","hashOfConfig":"36"},{"size":1886,"mtime":1608639733983,"results":"50","hashOfConfig":"36"},{"size":582,"mtime":1608564777576,"results":"51","hashOfConfig":"36"},{"size":887,"mtime":1608640409339,"results":"52","hashOfConfig":"36"},{"size":5447,"mtime":1608646539588,"results":"53","hashOfConfig":"36"},{"size":291,"mtime":1608574180466,"results":"54","hashOfConfig":"36"},{"size":5857,"mtime":1608616272612,"results":"55","hashOfConfig":"36"},{"size":654,"mtime":1608603714668,"results":"56","hashOfConfig":"36"},{"size":6992,"mtime":1608616210224,"results":"57","hashOfConfig":"36"},{"size":2933,"mtime":1608638019392,"results":"58","hashOfConfig":"36"},{"size":2926,"mtime":1608638049166,"results":"59","hashOfConfig":"36"},{"size":1320,"mtime":1608639411337,"results":"60","hashOfConfig":"36"},{"size":1283,"mtime":1608639441605,"results":"61","hashOfConfig":"36"},{"size":1165,"mtime":1608645300033,"results":"62","hashOfConfig":"36"},{"size":921,"mtime":1608647452845,"results":"63","hashOfConfig":"36"},{"size":2650,"mtime":1609677887377,"results":"64","hashOfConfig":"36"},{"size":1567,"mtime":1609654004092,"results":"65","hashOfConfig":"36"},{"size":784,"mtime":1609671802633,"results":"66","hashOfConfig":"36"},{"size":669,"mtime":1609672348123,"results":"67","hashOfConfig":"36"},{"size":744,"mtime":1609673322793,"results":"68","hashOfConfig":"36"},{"size":731,"mtime":1609677781886,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1ecr0z1",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/index.js",[],["148","149"],"/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/App.js",[],"/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/layout/Navbar.js",[],"/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/layout/Landing.js",[],"/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/auth/Login.js",[],"/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/auth/Register.js",[],"/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/store.js",[],"/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/reducers/index.js",[],"/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/reducers/alert.js",["150"],"const initialState = []\n\nexport default function (state = initialState, action) {\n\n  const { type, payload } = action\n  \n  switch (type) {\n    case 'SET_ALERT':\n      return [...state, payload];\n    case 'REMOVE_ALERT':\n      return state.filter(alert => alert.id !== payload) //payload is id in this case\n    default:\n      return state\n  }\n}","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/actions/alert.js",[],"/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/layout/Alert.js",[],"/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/reducers/auth.js",["151"],"const initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null\n}\n\nexport default function (state = initialState, action) {\n  const { payload, type } = action\n  switch (type) {\n    case 'REGISTER_SUCCESS':\n    case 'LOGIN_SUCCESS':\n      localStorage.setItem('token', payload.token)\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case 'REGISTER_FAIL':\n    case 'AUTH_ERROR':\n    case 'LOGIN_FAIL':\n    case 'LOGOUT':\n    case 'ACCOUNT_DELETED':\n      localStorage.removeItem('token')\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n    case 'USER_LOADED':\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      };\n    default:\n      return state\n  }\n}","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/actions/auth.js",[],"/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/utils/setAuthToken.js",[],"/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/dashboard/Dashboard.js",["152"],"import React, {useEffect, Fragment} from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Spinner from '../layout/Spinner'\nimport {Link} from 'react-router-dom'\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile'\nimport DashboardActions from './DashboardActions'\nimport Experience from './Experience'\nimport Education from './Education'\n\nconst Dashboard = ({getCurrentProfile, auth: {user}, profile : {profile, loading}, deleteAccount}) => {\n\n  useEffect(() => {\n    getCurrentProfile()\n  }, [])\n\n  return loading && profile === null\n    ? <Spinner />\n    : <Fragment>\n        <h1 className=\"large text-primary\">Dashboard</h1>\n        <p className=\"lead\">\n        <i className=\"fas fa-user\"> Welcome {user && user.name}</i>\n      </p>\n      {profile !== null\n        ?\n        <Fragment>\n          <DashboardActions />\n          <Experience experience={profile.experience} />\n          <Education education={profile.education} />\n\n          <div className=\"my-2\">\n            <button className=\"btn btn-danger\" onClick={()=> deleteAccount()}>\n              <i className=\"fas fa-user-minus\"></i> Delete My Account\n            </button>\n          </div>\n        </Fragment>\n        :\n        <Fragment>\n          <p>You have not yet setup a profile, please add some info</p>\n          <Link to='/create-profile' className = 'btn btn-primary my-1'> Create Profile </Link>\n        </Fragment>}\n      </Fragment>\n}\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile,\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired\n})\n\nexport default connect(mapStateToProps, {getCurrentProfile, deleteAccount})(Dashboard)\n","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/routing/PrivateRoute.js",[],"/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/reducers/profile.js",["153"],"const initialState = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {}\n}\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case 'GET_PROFILE':\n    case 'UPDATE_PROFILE':\n      return {\n        ...state,\n        profile: payload,\n        loading: false\n      };\n    case 'GET_PROFILES':\n      return {\n        ...state,\n        profiles: payload,\n        loading: false\n      }\n    case 'PROFILE_ERROR':\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      }\n    case 'CLEAR_PROFILE':\n      return {\n        ...state,\n        profile: null,\n        repos: [],\n        loading: false\n      };\n    case 'GET_REPOS':\n      return {\n        ...state,\n        repos: payload, \n        loading: false\n      }\n    default:\n      return {\n        ...state\n      }\n  }\n}","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/actions/profile.js",["154"],"import axios from 'axios';\nimport { setAlert } from './alert'\n\n//Get current profile\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me'); //it got the token already, it knows what to load\n    dispatch({\n      type: 'GET_PROFILE',\n      payload: res.data\n    })\n  } catch (error) {\n    dispatch({\n      type: 'PROFILE_ERROR',\n      payload: {msg: error.response.statusText, status: error.response.status}\n    })\n  }\n}\n\n//Get all profile\nexport const getProfiles = () => async dispatch => {\n  dispatch({type: 'CLEAR_PROFILE'})\n  try {\n    const res = await axios.get('/api/profile'); \n    dispatch({\n      type: 'GET_PROFILES',\n      payload: res.data\n    })\n  } catch (error) {\n    dispatch({\n      type: 'PROFILE_ERROR',\n      payload: {msg: error.response.statusText, status: error.response.status}\n    })\n  }\n}\n\n//Get profile by ID\nexport const getProfileById = (userId) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`); \n    dispatch({\n      type: 'GET_PROFILE',\n      payload: res.data\n    })\n  } catch (error) {\n    dispatch({\n      type: 'PROFILE_ERROR',\n      payload: {msg: error.response.statusText, status: error.response.status}\n    })\n  }\n}\n\n\n//Get Github Repos\nexport const getGithubRepos = (username) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`); \n    dispatch({\n      type: 'GET_REPOS',\n      payload: res.data\n    })\n  } catch (error) {\n    dispatch({\n      type: 'PROFILE_ERROR',\n      payload: {msg: error.response.statusText, status: error.response.status}\n    })\n  }\n}\n\n//Create or Update a profile\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\":\"application/json\"\n      }\n    }\n    const res = await axios.post('/api/profile', formData, config)\n\n    dispatch({\n      type: 'GET_PROFILE',\n      payload: res.data\n    })\n\n    dispatch(setAlert(edit ? 'Profile Updated' : \"Profile created\", \"success\"))\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n\n  } catch (error) {\n\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n    }\n\n    dispatch({\n      type: 'PROFILE_ERROR',\n      payload: {msg: error.response.statusText, status: error.response.status}\n    })\n  }\n}\n\n\n//Add experience\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\":\"application/json\"\n      }\n    }\n    const res = await axios.put('/api/profile/experience', formData, config)\n    dispatch({\n      type: 'UPDATE_PROFILE',\n      payload: res.data\n    })\n    dispatch(setAlert(\"Experience Added\", \"success\"))\n    history.push('/dashboard');\n  } catch (error) {\n\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n    }\n    dispatch({\n      type: 'PROFILE_ERROR',\n      payload: {msg: error.response.statusText, status: error.response.status}\n    })\n  }\n}\n\n\n//Add Education\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\":\"application/json\"\n      }\n    }\n    const res = await axios.put('/api/profile/education', formData, config)\n\n    dispatch({\n      type: 'UPDATE_PROFILE',\n      payload: res.data\n    })\n    dispatch(setAlert(\"Education Added\", \"success\"))\n\n    history.push('/dashboard');\n  \n\n  } catch (error) {\n\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n    }\n    dispatch({\n      type: 'PROFILE_ERROR',\n      payload: {msg: error.response.statusText, status: error.response.status}\n    })\n  }\n}\n\n\n// Delete experience\n// DELETE api/profile/experience/:exp_id\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/$${id}`);\n    \n    dispatch({\n      type: 'UPDATE_PROFILE',\n      payload: res.data\n    })\n\n    dispatch(setAlert(\"Experience Removed\", \"success\"))\n\n  } catch (error) {\n\n    dispatch({\n      type: 'PROFILE_ERROR',\n      payload: {msg: error.response.statusText, status: error.response.status}\n    })\n\n  }\n}\n\n\n// Delete experience\n// DELETE api/profile/education/:exp_id\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/$${id}`);\n    \n    dispatch({\n      type: 'UPDATE_PROFILE',\n      payload: res.data\n    })\n\n    dispatch(setAlert(\"Education Removed\", \"success\"))\n\n  } catch (error) {\n\n    dispatch({\n      type: 'PROFILE_ERROR',\n      payload: {msg: error.response.statusText, status: error.response.status}\n    })\n  }\n}\n\n\n// Delete Account and profile\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure? This can NOT be undone.')) {\n    try {\n    const res = await axios.delete(`/api/profile`);\n    \n    dispatch({type: 'CLEAR_PROFILE'})\n    dispatch({type: 'ACCOUNT_DELETED'})\n    dispatch(setAlert(\"Your account has been permanently deleted\", \"danger\"))\n\n  } catch (error) {\n\n    dispatch({\n      type: 'PROFILE_ERROR',\n      payload: {msg: error.response.statusText, status: error.response.status}\n    })\n  }\n  }\n  \n}","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/layout/Spinner.js",[],"/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/profile-forms/CreateProfile.js",["155"],"import React, { useState, Fragment } from 'react'\nimport {Link, withRouter} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport {createProfile} from '../../actions/profile'\n\nconst CreateProfile = ({createProfile, history}) => {\n\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: ''\n  });\n\n  const [displaySocialInputs, toggleSocialInput] = useState(false)\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram\n  } = formData;\n\n  const onChange = event => setFormData({...formData, [event.target.name]: event.target.value})\n\n  const onSubmit = event => {\n    event.preventDefault()\n    createProfile(formData, history, false)\n  }\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">\n        Create Your Profile\n      </h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={onChange}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\"\n            >Give us an idea of where you are at in your career</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={onChange} />\n          <small className=\"form-text\"\n            >Could be your own company or one you work for</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={onChange}/>\n          <small className=\"form-text\"\n            >Could be your own or a company website</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={onChange}/>\n          <small className=\"form-text\"\n            >City & state suggested (eg. Boston, MA)</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={onChange} />\n          <small className=\"form-text\"\n            >Please use comma separated values (eg.\n            HTML,CSS,JavaScript,PHP)</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername} onChange={onChange}\n          />\n          <small className=\"form-text\"\n            >If you want your latest repos and a Github link, include your\n            username</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={onChange}></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button type=\"button\" className=\"btn btn-light\" onClick={()=>toggleSocialInput(!displaySocialInputs)}>\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && \n          <Fragment>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={onChange}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={onChange}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={onChange}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={onChange}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={onChange}/>\n            </div>\n            \n          </Fragment>}\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <a className=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\n      </form>\n    </Fragment>\n  )\n}\n\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps, {createProfile})(withRouter(CreateProfile))\n","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/dashboard/DashboardActions.js",[],"/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/profile-forms/EditProfile.js",["156","157"],"import React, { useState, Fragment, useEffect } from 'react'\nimport {Link, withRouter} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport {createProfile, getCurrentProfile} from '../../actions/profile'\n\nconst EditProfile = ({profile: {profile, loading}, createProfile, getCurrentProfile, history}) => {\n\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: ''\n  });\n\n  const [displaySocialInputs, toggleSocialInput] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile();\n\n    setFormData({\n      company: loading || !profile.company ? \"\" : profile.company, \n      website: loading || !profile.website ? \"\" : profile.website, \n      location: loading || !profile.location ? \"\" : profile.location, \n      status: loading || !profile.status ? \"\" : profile.status, \n      skills: loading || !profile.skills ? \"\" : profile.skills.join(','), \n      githubusername: loading || !profile.githubusername ? \"\" : profile.githubusername, \n      bio: loading || !profile.bio ? \"\" : profile.bio, \n      twitter: loading || !profile.twitter ? \"\" : profile.twitter, \n      facebook: loading || !profile.facebook ? \"\" : profile.facebook, \n      linkedin: loading || !profile.linkedin ? \"\" : profile.linkedin, \n      youtube: loading || !profile.youtube ? \"\" : profile.youtube, \n      instagram: loading || !profile.instagram ? \"\" : profile.instagram \n    })\n  },[loading])\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram\n  } = formData;\n\n  const onChange = event => setFormData({...formData, [event.target.name]: event.target.value})\n\n  const onSubmit = event => {\n    event.preventDefault()\n    createProfile(formData, history, true)\n  }\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">\n        Create Your Profile\n      </h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={onChange}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\"\n            >Give us an idea of where you are at in your career</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={onChange} />\n          <small className=\"form-text\"\n            >Could be your own company or one you work for</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={onChange}/>\n          <small className=\"form-text\"\n            >Could be your own or a company website</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={onChange}/>\n          <small className=\"form-text\"\n            >City & state suggested (eg. Boston, MA)</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={onChange} />\n          <small className=\"form-text\"\n            >Please use comma separated values (eg.\n            HTML,CSS,JavaScript,PHP)</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername} onChange={onChange}\n          />\n          <small className=\"form-text\"\n            >If you want your latest repos and a Github link, include your\n            username</small\n          >\n        </div>\n        <div className=\"form-group\">\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={onChange}></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button type=\"button\" className=\"btn btn-light\" onClick={()=>toggleSocialInput(!displaySocialInputs)}>\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && \n          <Fragment>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value='twitter' onChange={onChange}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={onChange}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={onChange}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={onChange}/>\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={onChange}/>\n            </div>\n            \n          </Fragment>}\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" href=\"/dashboard\">Go Back</Link>\n      </form>\n    </Fragment>\n  )\n}\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n})\n\nexport default connect(mapStateToProps, {createProfile, getCurrentProfile})(withRouter(EditProfile))\n","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/profile-forms/AddExperience.js",[],"/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/profile-forms/AddEducation.js",[],"/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/dashboard/Education.js",[],"/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/dashboard/Experience.js",[],"/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/profiles/Profiles.js",["158"],"import React, {Fragment, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Spinner from '../layout/Spinner'\nimport { getProfiles } from '../../actions/profile'\nimport ProfileItem from './ProfileItem'\n\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n  \n  useEffect(() => {\n    getProfiles()\n  }, [])\n  \n  return (\n    <Fragment>\n      {loading ? (<Spinner />) : (<Fragment>\n        <h1 className=\"large text-primary\">Developers</h1>\n        <p className=\"lead\">\n          <i className=\"fab fa-connectdevelop\"></i>{' '}Browse and connect with developers\n        </p>\n        <div className=\"profiles\">\n          {profiles.length > 0 ? (\n            profiles.map(prof => (\n              <ProfileItem key={prof._id} profile={prof} />\n            ))\n          ) : ( <h4>No profiles found</h4> )}\n        </div>\n      </Fragment>)}\n    </Fragment>\n  )\n}\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n})\n\nexport default connect(mapStateToProps, {getProfiles})(Profiles)\n","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/profiles/ProfileItem.js",["159"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\n\nconst ProfileItem = ({ profile: {\n  user: { _id, name, avatar },\n  status,\n  company,\n  location,\n  skills\n} }) => {\n  \n  return (\n    <div className=\"profile bg-light\">\n      <img src={avatar} className=\"round-img\" />\n      <div className=\"\">\n        <h2>{name}</h2>\n        <p>{status}{company && <span> at {company}</span>}</p>\n        <p className=\"my-1\">{location && <span>{location}</span>}</p>\n        <Link to={`/profile/${_id}`} className='btn btn-primary'>View Profile</Link>\n      </div>\n      <ul>\n        {skills.slice(0, 4).map((skill, index) => (\n          <li key={index} className='text-primary'>\n            <i className=\"fas fa-check\"></i> ${skill}\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nProfileItem.propTypes = {\n  profile: PropTypes.object.isRequired\n}\n\nexport default ProfileItem\n","/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/profile/Profile.js",["160"],"/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/profile/ProfileTop.js",[],"/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/profile/ProfileAbout.js",[],"/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/profile/ProfileExperience.js",[],"/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/profile/ProfileEducation.js",[],"/Users/dominic/Desktop/Coding/Heroku deployment/Social Media/client/src/components/profile/ProfileGithub.js",["161","162","163"],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":3,"column":1,"nodeType":"170","endLine":15,"endColumn":2},{"ruleId":"168","severity":1,"message":"169","line":8,"column":1,"nodeType":"170","endLine":42,"endColumn":2},{"ruleId":"171","severity":1,"message":"172","line":15,"column":6,"nodeType":"173","endLine":15,"endColumn":8,"suggestions":"174"},{"ruleId":"168","severity":1,"message":"169","line":9,"column":1,"nodeType":"170","endLine":50,"endColumn":2},{"ruleId":"175","severity":1,"message":"176","line":222,"column":11,"nodeType":"177","messageId":"178","endLine":222,"endColumn":14},{"ruleId":"175","severity":1,"message":"179","line":2,"column":9,"nodeType":"177","messageId":"178","endLine":2,"endColumn":13},{"ruleId":"171","severity":1,"message":"180","line":44,"column":5,"nodeType":"173","endLine":44,"endColumn":14,"suggestions":"181"},{"ruleId":"175","severity":1,"message":"182","line":54,"column":5,"nodeType":"177","messageId":"178","endLine":54,"endColumn":12},{"ruleId":"171","severity":1,"message":"183","line":13,"column":6,"nodeType":"173","endLine":13,"endColumn":8,"suggestions":"184"},{"ruleId":"185","severity":1,"message":"186","line":15,"column":7,"nodeType":"187","endLine":15,"endColumn":49},{"ruleId":"175","severity":1,"message":"188","line":11,"column":8,"nodeType":"177","messageId":"178","endLine":11,"endColumn":21},{"ruleId":"175","severity":1,"message":"189","line":4,"column":8,"nodeType":"177","messageId":"178","endLine":4,"endColumn":15},{"ruleId":"171","severity":1,"message":"190","line":13,"column":6,"nodeType":"173","endLine":13,"endColumn":32,"suggestions":"191"},{"ruleId":"171","severity":1,"message":"192","line":13,"column":7,"nodeType":"193","endLine":13,"endColumn":31},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["196"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.facebook', 'profile.githubusername', 'profile.instagram', 'profile.linkedin', 'profile.location', 'profile.skills', 'profile.status', 'profile.twitter', 'profile.website', and 'profile.youtube'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["197"],"'twitter' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProfiles'. Either include it or remove the dependency array. If 'getProfiles' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["198"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ProfileGithub' is defined but never used.","'Spinner' is defined but never used.","React Hook useEffect has missing dependencies: 'getGithubRepos' and 'username'. Either include them or remove the dependency array. If 'getGithubRepos' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["199"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"208","text":"209"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.facebook, profile.githubusername, profile.instagram, profile.linkedin, profile.location, profile.skills, profile.status, profile.twitter, profile.website, profile.youtube]",{"range":"210","text":"211"},"Update the dependencies array to be: [getProfiles]",{"range":"212","text":"213"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"214","text":"215"},[552,554],"[getCurrentProfile]",[1606,1615],"[getCurrentProfile, loading, profile.bio, profile.company, profile.facebook, profile.githubusername, profile.instagram, profile.linkedin, profile.location, profile.skills, profile.status, profile.twitter, profile.website, profile.youtube]",[374,376],"[getProfiles]",[361,387],"[getGithubRepos, username]"]